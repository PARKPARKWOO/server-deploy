version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    networks:
      - internal-network
    ports:
      - "6379:6379"
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.hostname == pve"

  mysql-master:
    image: mysql:8.4
    container_name: mysql-master
    environment:
      MYSQL_ROOT_PASSWORD: ${RDBMS_PASSWORD}
    restart: always
    networks:
      - barbellrobot-backend
      - find-my-pet-backend
      - internal-network
    volumes:
      - barbellrobot-mysql-data:/var/lib/mysql
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.hostname == my"

  mongodb:
    image: mongo:latest
    container_name: mongodb
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.hostname == my"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
    networks:
      - find-my-pet-backend

networks:
  barbellrobot-backend:
    driver: overlay
    name: barbellrobot-backend
    attachable: true
  find-my-pet-backend:
    driver: overlay
    name: find-my-pet-backend
    attachable: true
  internal-network:
    driver: overlay
    name: internal-network
    attachable: true

volumes:
  barbellrobot-mysql-data:
  find-my-pet-mysql-data:
  mongo-data:
