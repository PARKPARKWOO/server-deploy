version: '3.8'

services:
  reverse-proxy:
    image: traefik:v2.9
    extra_hosts:
      - "host.docker.internal:172.30.0.1"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == pve
      labels:
        - "traefik.enable=true"
        # Router for wooyoung.duckdns.org
        - "traefik.http.routers.wooyoung.rule=Host(`wooyoung.duckdns.org`)"
        - "traefik.http.routers.wooyoung.entrypoints=websecure"
        - "traefik.http.routers.wooyoung.tls.certresolver=myresolver"
        - "traefik.http.routers.wooyoung.service=wooyoung-service"  # 서비스 이름 명시
        - "traefik.http.services.wooyoung-service.loadbalancer.server.url=https://172.30.1.32:8006"
        - "traefik.http.services.wooyoung-service.loadbalancer.server.port=8006"
        - "traefik.http.services.wooyoung-service.loadbalancer.passhostheader=true"

        # Router for pve-woo.duckdns.org
        - "traefik.http.routers.pve-woo.rule=Host(`pve-woo.duckdns.org`)"
        - "traefik.http.routers.pve-woo.entrypoints=websecure"
        - "traefik.http.routers.pve-woo.tls.certresolver=myresolver"
        - "traefik.http.routers.pve-woo.service=pve-woo-service"  # 서비스 이름 명시
        - "traefik.http.services.pve-woo-service.loadbalancer.server.url=https://172.30.1.42:8006"
        - "traefik.http.services.pve-woo-service.loadbalancer.server.port=8006"
        - "traefik.http.services.pve-woo-service.loadbalancer.passhostheader=true"
    command:
      - "--entrypoints.metrics.address=:8080"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--entrypoints.eureka.address=:8761"
      - "--accesslog=true"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=wy9295@naver.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--metrics.prometheus.entryPoint=metrics"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    networks:
      - internal-network
      - gateway
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
        loki-external-labels: "job=traefik"
#  nginx:
#    image: nginx:alpine
#    deploy:
#      replicas: 1
#      restart_policy:
#        condition: on-failure
#      placement:
#        constraints:
#          - node.hostname == my
#      labels:
#        - "traefik.enable=true"
#        - "traefik.http.routers.mirror-view.rule=Host(`mirror-view.duckdns.org`)"
#        - "traefik.http.routers.mirror-view.entrypoints=websecure"
#        - "traefik.http.routers.mirror-view.tls=true"
#        - "traefik.http.routers.mirror-view.tls.certresolver=myresolver"
#        - "traefik.http.services.mirror-view.loadbalancer.server.port=80"
#        - "traefik.docker.network=internal-network"
#    configs:
#      - source: nginx_config
#        target: /etc/nginx/conf.d/default.template
#    command: /bin/sh -c "envsubst '$$LOCAL_DIR' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
#    environment:
#      - LOCAL_DIR=src
#    volumes:
#      - ./:/var/www
#    networks:
#      - internal-network
  kafka1:
    image: 'bitnami/kafka:latest'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == pve
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - CLUSTER_ID="YyV8UqkzTOG4JfG0xVHoWw"
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - kafka1:/bitnami/kafka/data
    networks:
      - internal-network

networks:
  internal-network:
    driver: overlay
    attachable: true
    name: internal-network
  gateway:
    driver: overlay
    attachable: true
    name: gateway

volumes:
  kafka1:
  letsencrypt:
    driver: local
  wordpress_data:

configs:
  nginx_config:
    file: default.template
    external: true