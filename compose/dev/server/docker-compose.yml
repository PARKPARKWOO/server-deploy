version: '3.8'

services:
  auth-server:
    image: 'wy9295/auth-server:69285ae12c11ad0e7ee4aeb713338b3d072e4c78'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == pve"
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
    networks:
      - internal-network
      - auth-server
      - barbellrobot-backend
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RDBMS_URL=mysql-master
      - RDBMS_USERNAME=${RDBMS_USERNAME}
      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - ACCESS_SECRET_KEY=${ACCESS_SECRET_KEY}
      - ACCESS_EXPIRE_MILLIS=${ACCESS_EXPIRE_MILLIS}
      - REFRESH_SECRET_KEY=${REFRESH_SECRET_KEY}
      - REFRESH_EXPIRE_MILLIS=${REFRESH_EXPIRE_MILLIS}
      - EUREKA_URI=http://eureka:8761/eureka
      - PYROSCOPE_SERVER_ADDRESS=http://pyroscope:4040

  find-my-pet-backend:
    image: 'wy9295/find-my-pet-backend:08453866bb6263f4481b1cbce7a69aef3c412353'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == pve"
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
    networks:
      - internal-network
      - find-my-pet-backend
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RDBMS_URI=mysql-master
      - RDBMS_USERNAME=${RDBMS_USERNAME}
      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_S3_ACCESS_KEY=${AWS_S3_ACCESS_KEY}
      - AWS_S3_SECRET_KEY=${AWS_S3_SECRET_KEY}
      - CLOUD_FRONT_DOMAIN_NAME=${CLOUD_FRONT_DOMAIN_NAME}
      - AUTH_HOST=auth
      - KAFKA_HOST=kafka1:9092
      - EUREKA_URI=http://eureka:8761/eureka
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_HOST=mongodb

  barbellrobot-backend:
    image: 'wy9295/barbellrobot-backend:3ada73884b3b6fc4b0a011f0c5b3615c248fe14a'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == pve"
    networks:
      - internal-network
      - barbellrobot-backend
    volumes:
      - google-key:/root/.config/gcloud/key.json:ro
    command: >
      sh -c "gcloud auth activate-service-account --key-file=/root/.config/gcloud/key.json && java -jar app.jar"
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RDBMS_URI=mysql-master
      - RDBMS_USERNAME=${RDBMS_USERNAME}
      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_S3_ACCESS_KEY=${AWS_S3_ACCESS_KEY}
      - AWS_S3_SECRET_KEY=${AWS_S3_SECRET_KEY}
      - ACCESS_SECRET_KEY=${ACCESS_SECRET_KEY}
      - ACCESS_EXPIRE_MILLIS=${ACCESS_EXPIRE_MILLIS}
      - REFRESH_SECRET_KEY=${REFRESH_SECRET_KEY}
      - REFRESH_EXPIRE_MILLIS=${REFRESH_EXPIRE_MILLIS}
      - CLOUD_FRONT_DOMAIN_NAME=${CLOUD_FRONT_DOMAIN_NAME}
      - EUREKA_URI=http://eureka:8761/eureka

  gateway:
    image: 'wy9295/gateway:553d94abf4c65226066015ced8a24dc3915d91be'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == pve"
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
        - "traefik.enable=true"
        - "traefik.http.routers.gateway.rule=Host(`woo-auth.duckdns.org`) || Host(`find-my-pet.duckdns.org`)"
        - "traefik.http.services.gateway.loadbalancer.server.port=8080"
        - "traefik.http.routers.gateway.entrypoints=websecure"
        - "traefik.http.routers.gateway.tls=true"
        - "traefik.http.routers.gateway.tls.certresolver=myresolver"
        - "traefik.docker.network=gateway"
    networks:
      - internal-network
      - gateway
    environment:
      - BBR_NAME=dev-bbr-backend
      - FMP_NAME=dev-fmp-backend
      - AUTH_NAME=dev-auth
      - BBR_HOST=barbellrobot-backend
      - FMP_HOST=find-my-pet-backend
      - AUTH_HOST=auth-server
      - EUREKA_URI=http://eureka:8761/eureka

  eureka:
    image: 'wy9295/eureka:4ca3b7545c6397cedaf1b14fc48971fda7c5d232'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == my"
    networks:
      - internal-network

  orchestrator:
    image: 'wy9295/orchestrator:c6f85b0011c0161682f21fc3813415ffa4ea2684'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == pve"
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
    networks:
      - internal-network
      - barbellrobot-backend
    environment:
      - RDBMS_USERNAME=${RDBMS_USERNAME}
      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - RDBMS_URL=mysql-master
      - AUTH_RDBMS_URL=mysql-master
      - AUTH_RDBMS_USER=${RDBMS_USERNAME}
      - AUTH_RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - KAFKA_HOST=kafka1:9092

networks:
  barbellrobot-backend:
    driver: overlay
    name: barbellrobot-backend
    attachable: true
  find-my-pet-backend:
    driver: overlay
    name: find-my-pet-backend
    attachable: true
  internal-network:
    driver: overlay
    name: internal-network
    attachable: true
  auth-server:
    driver: overlay
    attachable: true
    name: auth-server
  gateway:
    driver: overlay
    name: gateway
    attachable: true

volumes:
  google-key:
