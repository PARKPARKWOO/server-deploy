version: '3.8'

services:
  auth-server:
    image: 'wy9295/auth-server:c19294f6ed5e0e71f5205bf1278052042ea1fde6'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == pve"
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
    networks:
      - internal-network
      - auth-server
      - barbellrobot-backend
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RDBMS_URL=mysql-master
      - RDBMS_USERNAME=${RDBMS_USERNAME}
      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - ACCESS_SECRET_KEY=${ACCESS_SECRET_KEY}
      - ACCESS_EXPIRE_MILLIS=${ACCESS_EXPIRE_MILLIS}
      - REFRESH_SECRET_KEY=${REFRESH_SECRET_KEY}
      - REFRESH_EXPIRE_MILLIS=${REFRESH_EXPIRE_MILLIS}
      - EUREKA_URI=http://eureka:8761/eureka
      - PYROSCOPE_SERVER_ADDRESS=http://pyroscope:4040

  find-my-pet-backend:
    image: 'wy9295/find-my-pet-backend:a06a6ecd97a7339a49a7e02380b94c99a063c0ca'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == pve"
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
    networks:
      - internal-network
      - find-my-pet-backend
#    - AUTH_HOST=auth 는 전환 때문에 잠시 추가함 최신버전 배포 후 수정
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RDBMS_URI=mysql-master
      - RDBMS_USERNAME=${RDBMS_USERNAME}
      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_S3_ACCESS_KEY=${AWS_S3_ACCESS_KEY}
      - AWS_S3_SECRET_KEY=${AWS_S3_SECRET_KEY}
      - CLOUD_FRONT_DOMAIN_NAME=${CLOUD_FRONT_DOMAIN_NAME}
      - AUTH_NAME=auth
      - AUTH_HOST=auth
      - STORAGE_NAME=storage
      - PLATFORM_HOLDER_CDN_HOST=https://cdn.platformholder.site
      - KAFKA_HOST=kafka1:9092
      - EUREKA_URI=http://eureka:8761/eureka
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_HOST=mongodb

#  barbellrobot-backend:
#    image: 'wy9295/barbellrobot-backend:3ada73884b3b6fc4b0a011f0c5b3615c248fe14a'
#    deploy:
#      replicas: 1
#      restart_policy:
#        condition: on-failure
#      placement:
#        constraints:
#          - "node.hostname == pve"
#    networks:
#      - internal-network
#      - barbellrobot-backend
#    volumes:
#      - google-key:/root/.config/gcloud/key.json:ro
#    command: >
#      sh -c "gcloud auth activate-service-account --key-file=/root/.config/gcloud/key.json && java -jar app.jar"
#    environment:
#      - REDIS_PORT=6379
#      - REDIS_HOST=redis
#      - REDIS_PASSWORD=${REDIS_PASSWORD}
#      - RDBMS_URI=mysql-master
#      - RDBMS_USERNAME=${RDBMS_USERNAME}
#      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
#      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
#      - AWS_S3_ACCESS_KEY=${AWS_S3_ACCESS_KEY}
#      - AWS_S3_SECRET_KEY=${AWS_S3_SECRET_KEY}
#      - ACCESS_SECRET_KEY=${ACCESS_SECRET_KEY}
#      - ACCESS_EXPIRE_MILLIS=${ACCESS_EXPIRE_MILLIS}
#      - REFRESH_SECRET_KEY=${REFRESH_SECRET_KEY}
#      - REFRESH_EXPIRE_MILLIS=${REFRESH_EXPIRE_MILLIS}
#      - CLOUD_FRONT_DOMAIN_NAME=${CLOUD_FRONT_DOMAIN_NAME}
#      - EUREKA_URI=http://eureka:8761/eureka

  gateway:
    image: 'wy9295/gateway:64d172757a5df64ebd96c50a585ec35fc2b44a90'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == pve"
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
        - "traefik.enable=true"
        - "traefik.http.routers.gateway.rule=Host(`woo-auth.duckdns.org`) || Host(`find-my-pet.duckdns.org`) || Host(`cdn.platformholder.site`) || Host(`forest.platformholder.site`) || Host(`auth.platformholder.site`)"
        - "traefik.http.services.gateway.loadbalancer.server.port=8080"
        - "traefik.http.routers.gateway.entrypoints=websecure"
        - "traefik.http.routers.gateway.tls=true"
        - "traefik.http.routers.gateway.tls.certresolver=myresolver"
        - "traefik.docker.network=gateway"
    networks:
      - internal-network
      - gateway
    environment:
      - BBR_NAME=dev-bbr-backend
      - FMP_NAME=dev-fmp-backend
      - AUTH_NAME=dev-auth
      - BBR_HOST=barbellrobot-backend
      - FMP_HOST=find-my-pet-backend
      - AUTH_HOST=auth-server
      - STORAGE_HOST=storage
      - STORAGE_NAME=dev-storage
      - EUREKA_URI=http://eureka:8761/eureka
      - FOREST_NAME=dev-forest
      - FOREST_HOST=forest

  eureka:
    image: 'wy9295/eureka:4ca3b7545c6397cedaf1b14fc48971fda7c5d232'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == my"
    networks:
      - internal-network

  orchestrator:
    image: 'wy9295/orchestrator:cfed1c643b419557b8f350efebd882ffc4bf02eb'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == pve"
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
    networks:
      - internal-network
      - barbellrobot-backend
    environment:
      - RDBMS_USERNAME=${RDBMS_USERNAME}
      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - RDBMS_URL=mysql-master
      - AUTH_RDBMS_URL=mysql-master
      - AUTH_RDBMS_USER=${RDBMS_USERNAME}
      - AUTH_RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - KAFKA_HOST=kafka1:9092
      - PYROSCOPE_SERVER_ADDRESS=http://pyroscope:4040
  admin:
    image: wordpress:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.hostname == my
      labels:
        - "traefik.enable=true"
#        - "traefik.http.routers.admin.rule=Host(`tech-hub-central.duckdns.org`) || HostRegexp(`{subdomain:.+}.tech-hub-central.duckdns.org`) || Host(`blog.tech-hub-central.duckdns.org`) || Host(`blog.platformholder.site`) || Host(`platformholder.site`)"
        - "traefik.http.routers.admin.rule=Host(`blog.platformholder.site`) || Host(`platformholder.site`)"
        - "traefik.http.routers.admin.entrypoints=websecure"
        - "traefik.http.routers.admin.tls=true"
        - "traefik.http.routers.admin.tls.certresolver=myresolver"
        - "traefik.http.services.admin.loadbalancer.server.port=80"
        - "traefik.docker.network=internal-network"
    environment:
      WORDPRESS_DB_HOST: mysql-master
      WORDPRESS_DB_USER: ${RDBMS_USERNAME}
      WORDPRESS_DB_PASSWORD: ${RDBMS_PASSWORD}
      WORDPRESS_DB_NAME: admin
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_ALLOW_MULTISITE', true );
        define( 'MULTISITE', true );
        define( 'SUBDOMAIN_INSTALL', true );
        define( 'DOMAIN_CURRENT_SITE', 'platformholder.site' );
        define( 'PATH_CURRENT_SITE', '/' );
        define( 'SITE_ID_CURRENT_SITE', 1 );
        define( 'BLOG_ID_CURRENT_SITE', 1 );
    volumes:
      - wordpress_admin:/var/www/html
      - /root/config/wordpress/.htaccess:/var/www/html/.htaccess
    networks:
      - internal-network
      - gateway

  storage:
    image: 'wy9295/storage:62b6cf70d4d3844e9fec05d858eacf52069fbde4'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
    networks:
      - internal-network
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RDBMS_URL=mysql-master
      - RDBMS_USERNAME=${RDBMS_USERNAME}
      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - EUREKA_URI=http://eureka:8761/eureka
      - PYROSCOPE_SERVER_ADDRESS=http://pyroscope:4040
      - AUTH_NAME=auth
      - AUTH_HOST=auth
      - CASSANDRA_URL=cassandra-1
      - CASSANDRA_USERNAME=${CASSANDRA_USERNAME}
      - CASSANDRA_PASSWORD=${CASSANDRA_PASSWORD}
      - KAFKA_HOST=kafka1:9092
  forest:
    image: 'wy9295/forest:205274f21b5cec723c3af5e14231115617e8ec18'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
    networks:
      - internal-network
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RDBMS_URL=mysql-master
      - RDBMS_USERNAME=${RDBMS_USERNAME}
      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - EUREKA_URI=http://eureka:8761/eureka
      - PYROSCOPE_SERVER_ADDRESS=http://pyroscope:4040
#      - CASSANDRA_URL=cassandra-1
#      - CASSANDRA_USERNAME=${CASSANDRA_USERNAME}
#      - CASSANDRA_PASSWORD=${CASSANDRA_PASSWORD}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_HOST=mongodb
      - AUTH_NAME=auth
      - AUTH_HOST=auth
      - STORAGE_NAME=storage
      - PLATFORM_HOLDER_CDN_HOST=https://cdn.platformholder.site
      - KAFKA_HOST=kafka1:9092


networks:
  barbellrobot-backend:
    driver: overlay
    name: barbellrobot-backend
    attachable: true
  find-my-pet-backend:
    driver: overlay
    name: find-my-pet-backend
    attachable: true
  internal-network:
    driver: overlay
    name: internal-network
    attachable: true
  auth-server:
    driver: overlay
    attachable: true
    name: auth-server
  gateway:
    driver: overlay
    name: gateway
    attachable: true

volumes:
  google-key:
  wordpress_data:
  wordpress_admin: