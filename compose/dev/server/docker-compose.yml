version: '3.8'

services:
  auth-server:
    image: 'wy9295/auth-server:15ec85b9df80e2486a454c7b1e32efca07969164'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == pve"
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
    networks:
      - internal-network
      - auth-server
      - barbellrobot-backend
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RDBMS_URL=mysql-master
      - RDBMS_USERNAME=${RDBMS_USERNAME}
      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - ACCESS_SECRET_KEY=${ACCESS_SECRET_KEY}
      - ACCESS_EXPIRE_MILLIS=${ACCESS_EXPIRE_MILLIS}
      - REFRESH_SECRET_KEY=${REFRESH_SECRET_KEY}
      - REFRESH_EXPIRE_MILLIS=${REFRESH_EXPIRE_MILLIS}
      - EUREKA_URI=http://eureka:8761/eureka
      - PYROSCOPE_SERVER_ADDRESS=http://pyroscope:4040

  find-my-pet-backend:
    image: 'wy9295/find-my-pet-backend:a06a6ecd97a7339a49a7e02380b94c99a063c0ca'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == pve"
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
    networks:
      - internal-network
      - find-my-pet-backend
#    - AUTH_HOST=auth 는 전환 때문에 잠시 추가함 최신버전 배포 후 수정
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RDBMS_URI=mysql-master
      - RDBMS_USERNAME=${RDBMS_USERNAME}
      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_S3_ACCESS_KEY=${AWS_S3_ACCESS_KEY}
      - AWS_S3_SECRET_KEY=${AWS_S3_SECRET_KEY}
      - CLOUD_FRONT_DOMAIN_NAME=${CLOUD_FRONT_DOMAIN_NAME}
      - AUTH_NAME=auth
      - AUTH_HOST=auth
      - STORAGE_NAME=storage
      - PLATFORM_HOLDER_CDN_HOST=https://cdn.platformholder.site
      - KAFKA_HOST=kafka1:9092
      - EUREKA_URI=http://eureka:8761/eureka
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_HOST=mongodb

#  barbellrobot-backend:
#    image: 'wy9295/barbellrobot-backend:3ada73884b3b6fc4b0a011f0c5b3615c248fe14a'
#    deploy:
#      replicas: 1
#      restart_policy:
#        condition: on-failure
#      placement:
#        constraints:
#          - "node.hostname == pve"
#    networks:
#      - internal-network
#      - barbellrobot-backend
#    volumes:
#      - google-key:/root/.config/gcloud/key.json:ro
#    command: >
#      sh -c "gcloud auth activate-service-account --key-file=/root/.config/gcloud/key.json && java -jar app.jar"
#    environment:
#      - REDIS_PORT=6379
#      - REDIS_HOST=redis
#      - REDIS_PASSWORD=${REDIS_PASSWORD}
#      - RDBMS_URI=mysql-master
#      - RDBMS_USERNAME=${RDBMS_USERNAME}
#      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
#      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
#      - AWS_S3_ACCESS_KEY=${AWS_S3_ACCESS_KEY}
#      - AWS_S3_SECRET_KEY=${AWS_S3_SECRET_KEY}
#      - ACCESS_SECRET_KEY=${ACCESS_SECRET_KEY}
#      - ACCESS_EXPIRE_MILLIS=${ACCESS_EXPIRE_MILLIS}
#      - REFRESH_SECRET_KEY=${REFRESH_SECRET_KEY}
#      - REFRESH_EXPIRE_MILLIS=${REFRESH_EXPIRE_MILLIS}
#      - CLOUD_FRONT_DOMAIN_NAME=${CLOUD_FRONT_DOMAIN_NAME}
#      - EUREKA_URI=http://eureka:8761/eureka

  gateway:
    image: 'wy9295/gateway:6460cf643164101f912433f54857e25fa03f11a7'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == pve"
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
        - "traefik.enable=true"
        - "traefik.http.routers.gateway.rule=Host(`woo-auth.duckdns.org`) || Host(`find-my-pet.duckdns.org`) || Host(`cdn.platformholder.site`) || Host(`forest.platformholder.site`) || Host(`auth.platformholder.site`) || Host(`mirror-view.platformholder.site`)"
        - "traefik.http.services.gateway.loadbalancer.server.port=8080"
        - "traefik.http.routers.gateway.entrypoints=websecure"
        - "traefik.http.routers.gateway.tls=true"
        - "traefik.http.routers.gateway.tls.certresolver=myresolver"
        - "traefik.docker.network=gateway"
    networks:
      - internal-network
      - gateway
    environment:
      - BBR_NAME=dev-bbr-backend
      - FMP_NAME=dev-fmp-backend
      - AUTH_NAME=dev-auth
      - BBR_HOST=barbellrobot-backend
      - FMP_HOST=find-my-pet-backend
      - AUTH_HOST=auth-server
      - STORAGE_HOST=storage
      - STORAGE_NAME=dev-storage
      - EUREKA_URI=http://eureka:8761/eureka
      - FOREST_NAME=dev-forest
      - FOREST_HOST=forest
      - MV_NAME=dev-mirror-view
      - MV_HOST=mirror-view

  eureka:
    image: 'wy9295/eureka:4ca3b7545c6397cedaf1b14fc48971fda7c5d232'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == my"
    networks:
      - internal-network

  orchestrator:
    image: 'wy9295/orchestrator:e920a6959ac83401cda61a0748e88596c89d6b23'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == pve"
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
    networks:
      - internal-network
      - barbellrobot-backend
    environment:
      - RDBMS_USERNAME=${RDBMS_USERNAME}
      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - RDBMS_URL=mysql-master
      - AUTH_RDBMS_URL=mysql-master
      - AUTH_RDBMS_USER=${RDBMS_USERNAME}
      - AUTH_RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - KAFKA_HOST=kafka1:9092
      - PYROSCOPE_SERVER_ADDRESS=http://pyroscope:4040
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}

  storage:
    image: 'wy9295/storage:2f79cfac7ecf5a0bb3dab93f1409f0af17cd4be8'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
    networks:
      - internal-network
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RDBMS_URL=mysql-master
      - RDBMS_USERNAME=${RDBMS_USERNAME}
      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - EUREKA_URI=http://eureka:8761/eureka
      - PYROSCOPE_SERVER_ADDRESS=http://pyroscope:4040
      - AUTH_NAME=auth
      - AUTH_HOST=auth
      - CASSANDRA_URL=cassandra-1
      - CASSANDRA_USERNAME=${CASSANDRA_USERNAME}
      - CASSANDRA_PASSWORD=${CASSANDRA_PASSWORD}
      - KAFKA_HOST=kafka1:9092
  forest:
    image: 'wy9295/forest:544aa4e716772604fdb8f13d14d936447e6bf94c'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
    networks:
      - internal-network
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RDBMS_URL=mysql-master
      - RDBMS_USERNAME=${RDBMS_USERNAME}
      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - EUREKA_URI=http://eureka:8761/eureka
      - PYROSCOPE_SERVER_ADDRESS=http://pyroscope:4040
#      - CASSANDRA_URL=cassandra-1
#      - CASSANDRA_USERNAME=${CASSANDRA_USERNAME}
#      - CASSANDRA_PASSWORD=${CASSANDRA_PASSWORD}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_HOST=mongodb
      - AUTH_NAME=auth
      - AUTH_HOST=auth
      - STORAGE_NAME=storage
      - PLATFORM_HOLDER_CDN_HOST=https://cdn.platformholder.site
      - KAFKA_HOST=kafka1:9092
      - AES_KEY=${AES_KEY}
      - HMAC_KEY=${HMAC_KEY}

  websocket-server:
    image: 'wy9295/websocket-server:204b605'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.ws-secure.rule=Host(`ws.platformholder.site`)"
        - "traefik.http.routers.ws-secure.entrypoints=websecure"
        - "traefik.http.routers.ws-secure.tls.certresolver=myresolver"
        - "traefik.http.services.ws-service.loadbalancer.server.port=8080"
        - "traefik.http.routers.ws-secure.service=ws-service"
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
    networks:
      - internal-network
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - EUREKA_URI=http://eureka:8761/eureka
      - AUTH_NAME=auth-server
      - AUTH_HOST=auth-server:9090
      - KAFKA_HOST=kafka1:9092
      - STORAGE_NAME=storage
      - PLATFORM_HOLDER_CDN_HOST=https://cdn.platformholder.site
      - MV_HOST=http://mirror-view-backend:8080

  mirror-view-backend:
    image: 'wy9295/mirror-view-backend:2fdc0ba8a7ca0f6404764934442b6e0b9ea0e9d6'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "prometheus.enable=true"
        - "prometheus.scrape=true"
        - "prometheus.path=/actuator/prometheus"
        - "prometheus.port=8080"
    networks:
      - internal-network
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - EUREKA_URI=http://eureka:8761/eureka
      - AUTH_NAME=auth
      - AUTH_HOST=auth
      - KAFKA_HOST=kafka1:9092
      - CASSANDRA_URL=cassandra-1
      - CASSANDRA_USERNAME=${CASSANDRA_USERNAME}
      - CASSANDRA_PASSWORD=${CASSANDRA_PASSWORD}
      - RDBMS_URL=mysql-master
      - RDBMS_USERNAME=${RDBMS_USERNAME}
      - RDBMS_PASSWORD=${RDBMS_PASSWORD}
      - PYROSCOPE_SERVER_ADDRESS=http://pyroscope:4040
      - PLATFORM_HOLDER_CDN_HOST=https://cdn.platformholder.site
      - STORAGE_NAME=storage

networks:
  barbellrobot-backend:
    driver: overlay
    name: barbellrobot-backend
    attachable: true
  find-my-pet-backend:
    driver: overlay
    name: find-my-pet-backend
    attachable: true
  internal-network:
    driver: overlay
    name: internal-network
    attachable: true
  auth-server:
    driver: overlay
    attachable: true
    name: auth-server
  gateway:
    driver: overlay
    name: gateway
    attachable: true

volumes:
  google-key: