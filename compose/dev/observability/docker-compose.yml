version: "3.8"

secrets:
  s3_access_key:
    external: true
  s3_secret_key:
    external: true

services:
  prometheus:
    image: prom/prometheus:v3.5.0
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.role == manager"
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - internal-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    user: "0:0"

  loki:
    image: grafana/loki:2.9.0
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == my"
    networks:
      - internal-network
    configs:
      - source: loki_config
        target: /etc/loki/loki.yaml
    secrets:
      - s3_access_key
      - s3_secret_key
    environment:
      - AWS_REGION=us-east-1
    entrypoint: ["/bin/sh","-c",
      "export AWS_ACCESS_KEY_ID=$$(cat /run/secrets/s3_access_key); \
       export AWS_SECRET_ACCESS_KEY=$$(cat /run/secrets/s3_secret_key); \
       exec /usr/bin/loki -config.file=/etc/loki/loki.yaml -config.expand-env=true" ]

  grafana:
    image: grafana/grafana:12.0
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == my"
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=internal-network"
        - "traefik.http.routers.grafana.rule=Host(`wrafana.duckdns.org`)"
        #      FIXME: 개발을 위해 잠시 주석처리
        #      - "traefik.http.middlewares.grafana-ipwhitelist.ipwhitelist.sourcerange=${IP_ALLOW_LIST}"
        #      - "traefik.http.routers.grafana.middlewares=grafana-ipwhitelist@docker"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
        - "traefik.http.routers.grafana.entrypoints=websecure"
        - "traefik.http.routers.grafana.tls=true"
        - "traefik.http.routers.grafana.tls.certresolver=myresolver"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - IP_ALLOW_LIST=${IP_ALLOW_LIST}
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        cat <<EOF > /etc/grafana/provisioning/datasources/ds-pyroscope.yaml
        apiVersion: 1
        datasources:
        - name: Pyroscope
          type: grafana-pyroscope-datasource
          access: proxy
          orgId: 1
          url: http://pyroscope:4040/
          basicAuth: false
          isDefault: false
          editable: true
        EOF
        /run.sh

    networks:
      - internal-network

  pyroscope:
    image: grafana/pyroscope:1.14.0
    ports:
      - "4040:4040"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.hostname == my"
    networks:
      - internal-network
    environment:
      - PYROSCOPE_LOG_LEVEL=info

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.9.1
    command:
      - '--path.rootfs=/host'
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - internal-network

#  mysqld-exporter:
#    container_name: mysqld_exporter
#    image: prom/mysqld-exporter
#    environment:
#      - DATA_SOURCE_NAME="계정명:비밀번호@(mysql:3306)/"
#    command:
#      - "--mysqld.username=계정명:비밀번호"
#      - "--mysqld.address=mysql:3306"
#    links:
#      - mysql
#    ports:
#      - 9104:9104
#    depends_on:
#      - mysql-master
#    restart: unless-stopped

networks:
  internal-network:
    driver: overlay
    attachable: true
    name: internal-network

volumes:
  prometheus_data:
    driver: local
  grafana_data:

configs:
  prometheus_config:
    file: ./prometheus.yml
  loki_config:
    file: ./loki.yml